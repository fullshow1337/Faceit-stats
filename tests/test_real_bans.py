import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from api_clients.fast_api_client_httpx import FastFaceitClientHttpx
import logging
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

async def test_real_bans():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –±–∞–Ω–æ–≤"""
    api_key = os.getenv("FACEIT_API_KEY")
    if not api_key:
        logger.error("‚ùå FACEIT_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return
        
    # Steam ID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    steam_id = "76561199765748683"
    
    try:
        logger.info(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞–Ω–æ–≤ –¥–ª—è Steam ID: {steam_id}")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞
        async with FastFaceitClientHttpx(api_key) as client:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∏–≥—Ä–æ–∫
            logger.info("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞...")
            player_data = await client.get_player_by_steam_id(steam_id)
            
            if not player_data:
                logger.error("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ FACEIT")
                return
                
            logger.info("‚úÖ –ò–≥—Ä–æ–∫ –Ω–∞–π–¥–µ–Ω –Ω–∞ FACEIT")
            logger.info(f"Player ID: {player_data.get('player_id')}")
            logger.info(f"Nickname: {player_data.get('nickname')}")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
            logger.info("–ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞...")
            complete_data = await client.get_complete_player_data(steam_id)
            
            if complete_data:
                logger.info("‚úÖ –ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –ø–æ–ª—É—á–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–Ω—ã
                bans = complete_data.get("bans", [])
                logger.info(f"–ù–∞–π–¥–µ–Ω–æ –±–∞–Ω–æ–≤ –≤ –ø–æ–ª–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {len(bans)}")
                
                if bans:
                    for i, ban in enumerate(bans, 1):
                        logger.info(f"\n--- –ë–∞–Ω #{i} ---")
                        logger.info(f"–ü—Ä–∏—á–∏–Ω–∞: {ban.get('reason')}")
                        logger.info(f"–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏: {ban.get('start_date')}")
                        logger.info(f"–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {ban.get('end_date')}")
                else:
                    logger.info("‚ÑπÔ∏è –£ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –±–∞–Ω–æ–≤")
                
                # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ API –±–∞–Ω–æ–≤
                logger.info("\n" + "="*50)
                logger.info("–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ API –±–∞–Ω–æ–≤...")
                
                player_id = complete_data.get("player_id")
                if player_id:
                    raw_bans = await client.get_player_bans(player_id)
                    logger.info(f"–ù–∞–π–¥–µ–Ω–æ –±–∞–Ω–æ–≤ —á–µ—Ä–µ–∑ API: {len(raw_bans)}")
                    
                    if raw_bans:
                        for i, ban in enumerate(raw_bans, 1):
                            logger.info(f"\n--- –°—ã—Ä–æ–π –±–∞–Ω #{i} ---")
                            logger.info(f"–ü–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: {ban}")
                    else:
                        logger.info("‚ÑπÔ∏è API –Ω–µ –≤–µ—Ä–Ω—É–ª –±–∞–Ω–æ–≤")
                else:
                    logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å player_id")
            else:
                logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞")
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –±–∞–Ω–æ–≤")
    print("=" * 50)
    
    asyncio.run(test_real_bans()) 